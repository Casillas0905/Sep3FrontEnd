@page "/CreateUser"
@using Domain.DTOs
@using Domain.Models
@using HttpClients.ClientInterfaces
@inject IUserService userService;

<div class="all">
	<div class="questions">
        <h1>Create Account</h1>
    		<form/>
    		<label for="name">First name:</label>
    		<br>
    		<input type="text" id="name" name="name" @bind="firstName" @bind:event="oninput"/>
    		<br>
    		<div class="gender">
    			<label for="gender">Gender</label>
    			<select id="education" name="education" @bind="gender" @bind:event="onchange">
    				<option value="male">Male</option>
    				<option value="female">Female</option>
    				<option value="non binary">Non binary</option>
    				<option value="other">Other</option>
    			</select>
    		</div>
    		<label for="name">Last name:</label>
    		<br>
    		<input type="text" id="lastname" name="lastname" @bind="lastName" @bind:event="oninput">
    		<br>
    		<label for="name">Email:</label>
    		<br>
    		<input type="text" id="email" name="email" @bind="email" @bind:event="oninput">
    		<br>
    		<label for="username">Username:</label>
    		<br>
    		<input type="text" id="username" name="username" @bind="username" @bind:event="oninput">
    		<br>
    		<label for="birthday">Birthday:</label>
    		<br>
    		<input type="string" id="birthday" name="birthday" @bind="birthday" @bind:event="oninput">
    		<br>
    		<label for="password">Password:</label>
    		<br>
    		<input type="password" id="password" name="password" @bind="password" @bind:event="oninput">
    		<br>
    		<br>
    		<label for="password">Rewrite the password:</label>
    		<br>
    		<input type="password" id="password" name="password" @bind="password" @bind:event="oninput">
    		<br>
		    <br>
	</div>
    		
    		<div class="form-container">
    			<form>
    			  <div class="description">
    				<label for="description">Description:</label><br>
    				<textarea id="description" name="description" @bind="description" @bind:event="oninput"></textarea>
    			
    			  </div>
    		  
    			  <div class="description">
    				<label for="note">Note:</label><br>
    				<textarea id="note" name="note" @bind="note" @bind:event="oninput"></textarea>
    	
    				<div class="about-me">
    				
    					<div class="horoscope">
    						<label for="horoscope" @bind="horoscope" @bind:event="onchange">Horoscope:</label>
    						<select id="horoscope" name="horoscope">
    							<option value="Aries">Aries</option>
    							<option value="Taurus">Taurus</option>
    							<option value="Gemini">Gemini</option>
    							<option value="Cancer">Cancer</option>
    							<option value="Leo">Leo</option>
    							<option value="Virgo">Virgo</option>
    							<option value="Libra">Libra</option>
    							<option value="Scorpio">Scorpio</option>
    							<option value="Sagittarius">Sagittarius</option>
    							<option value="Capricorn">Capricorn</option>
    							<option value="Aquarius">Aquarius</option>
    							<option value="Pisces">Pisces</option>
    						</select>
    
    
    					</div>
    
    					<div class="education-options">
    						<label for="education" @bind="education" @bind:event="onselect">Education</label>
    							<select id="education" name="education">
    						<option value="Aries">High School</option>
    						<option value="Aries">College</option>
    						<option value="Aries">Bachelor degree</option>
    						<option value="Aries">PhD</option>
    						</select>
    					</div>
    
    					
    					<div class="drink-options">
    						<label for="drink" >Do you drink?</label>
    							<select id="drink" name="drink" @bind="drink" @bind:event="onchange">
    						<option value="true">Yes</option>
    						<option value="false">No</option>
    					</select>
    			
    					</div>
    
    					<div class="preference">
    						<label for="education">Preference?</label>
    							<select id="education" name="education" @bind="preference" @bind:event="onchange">
    						<option value="male">Male</option>
    						<option value="female">Female</option>
                                </select>
    					</div>
    
    
    					<label for="occupation">Occupation:</label><br>
    			<input type="text" id="occupation" name="occupation" @bind="occupation" @bind:event="oninput"><br><br>
    	
    		
    					<label for="city">City:</label><br>
    			<input type="text" id="city" name="city" @bind="city" @bind:event="oninput"><br><br>
    				</div></div>
    			</form>
    		  </div>
    	<button  onclick="location.href='choosephotos.html'">Next</button>
       <button class="button" onclick="location.href='./index.html'">Go back to homepage</button>
    
    </div>
<div class="card">
    <h3>Create User</h3>
    <div class="form-group field">
        <label>User name:</label>
        <input type="text" @bind="username" @bind:event="oninput"/>
        <label>Password:</label>
        <input type="text" @bind="password" @bind:event="oninput"/>
        <label>Email:</label>
        <input type="text" @bind="email" @bind:event="oninput"/>
        <label>Name:</label>
        <input type="text" @bind="firstName" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@(string.IsNullOrEmpty(username))" class="acceptbtn">Create</button>
    </div>
</div>
@code {
	private int id = 0;
	private string resultMsg = "";
	private string color = "";
    private string username = "";
	private string password = "";
    private string email = "";
    private string firstName = "";
	private string lastName = "";
	private string birthday = "MM/DD/YYYY";
	private string description = "";
	private int numberofMatches = 0;
	private string note = "";
	private string photo1 = "photo";
	private string photo2 = "photo";
	private string photo3 = "photo";
	private string photo4 = "photo";
	private string photo5 = "photo";
	private string gender = "";
	private string preference = "";
	private string horoscope = "";
	private string occupation = "";
	private string city = "";
	private string education = "";
	private bool drink = true;
	private bool administrator = false;

	private async Task Create()
    {
        resultMsg = "";
        try
        {
            await userService.Create(new UserDomainModel(id,username,password,email,firstName, lastName,birthday
	            ,description, numberofMatches,note
	            , photo1, photo2, photo3, photo4, photo5,gender,preference,horoscope, occupation,city,education,drink, administrator));
            username = "";
            password = "";
            email = "";
	        firstName = "";
	        lastName = "";
	        birthday = "";
	        description = "";
	        note = "";
	        photo1 = "";
	        photo2 = "";
	        photo3 = "";
	        photo4 = "";
	        photo5 = "";
	        gender = "";
	        preference = "";
	        horoscope = "";
	        occupation = "";
	        city = "";
	        education = "";
	        resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
	
	/*private bool CheckDateOfBirth(UserDomainModel user)
	{
        
		if (birthday > DateTime.Now.AddYears(-18))
		{
	// Date of birth is less than 18 years ago
			Console.WriteLine("You must be at least 18 years old.");
			resultMsg = "You must be at least 18 years old.";
			return false;
	// You can display an error message or take any other action as needed
		}
		else
		{
	// Date of birth is 18 years ago or earlier
			return true;

	// You can proceed with the form submission or take any other action as needed
		}*/
	}
}